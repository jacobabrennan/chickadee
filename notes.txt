

//== What does this currently do? ==============================================

//-- Basic Structure -----------------------------
Express server without any best practices fleshed out.
Bare bones react client in progress

//-- User Management -----------------------------
express router mounted at /auth
user sessions present
can register
can login
can logout

//-- Post API (content) --------------------------
express router mounted at /feed, to which a user agent to post new posts, get
    a specific post, or get all posts.
    Confusing, I know, and not very fleshed out

//-- Client (react) ------------------------------
Auth router handling registration, login, and logout
    - Doesn't handle network failures
    - Doesn't display failure reasons to the user
Basic post submission form
    - Only handles submission of a body of text


//== Major things I could work on ==============================================

work on posts
    update feed after successful post
    allow posting of other media types, such as video, audio, links, or graphics
    other post types, such as replies or quotes
handle error states in client
start work on follows
start work on vouches (trust count?)
Privacy settings
    block lists
Change Password
Display Name Preferences
swap in better database

Who is allowed to reply? Why allow trolls to make bank by parasitizing users?

Chickadee holidays?
    like valentines day (but not) where you send special data-things to people
        you admire

Letters from staff
    dev updates
    financials, including detailed budget


//== TO DO =====================================================================

bcryptjs should be swapped out for regular bcrypt. In order to do so, a stable version of nodejs must be in use. The current stable version, as of writing, has a poor workflow for using ES6 modules.